//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SkladData.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class sp_baseEntities : DbContext
    {
        public sp_baseEntities()
            : base("name=sp_baseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountType> AccountType { get; set; }
        public virtual DbSet<Actives> Actives { get; set; }
        public virtual DbSet<Banks> Banks { get; set; }
        public virtual DbSet<BanksPersons> BanksPersons { get; set; }
        public virtual DbSet<CashDesks> CashDesks { get; set; }
        public virtual DbSet<ChargeType> ChargeType { get; set; }
        public virtual DbSet<CityType> CityType { get; set; }
        public virtual DbSet<Commission> Commission { get; set; }
        public virtual DbSet<CommonParams> CommonParams { get; set; }
        public virtual DbSet<CONTRACTS> CONTRACTS { get; set; }
        public virtual DbSet<CONTRDET> CONTRDET { get; set; }
        public virtual DbSet<CONTRPARAMS> CONTRPARAMS { get; set; }
        public virtual DbSet<CONTRRESULTS> CONTRRESULTS { get; set; }
        public virtual DbSet<Counters> Counters { get; set; }
        public virtual DbSet<Countries> Countries { get; set; }
        public virtual DbSet<Currency> Currency { get; set; }
        public virtual DbSet<CURRENCYRATE> CURRENCYRATE { get; set; }
        public virtual DbSet<Customers> Customers { get; set; }
        public virtual DbSet<DeboningDet> DeboningDet { get; set; }
        public virtual DbSet<DemandGroup> DemandGroup { get; set; }
        public virtual DbSet<DISCCARDGRP> DISCCARDGRP { get; set; }
        public virtual DbSet<DISCCARDS> DISCCARDS { get; set; }
        public virtual DbSet<Docs> Docs { get; set; }
        public virtual DbSet<DocType> DocType { get; set; }
        public virtual DbSet<ENTPARAMS> ENTPARAMS { get; set; }
        public virtual DbSet<ExtRel> ExtRel { get; set; }
        public virtual DbSet<Functions> Functions { get; set; }
        public virtual DbSet<KaAddr> KaAddr { get; set; }
        public virtual DbSet<KADiscount> KADiscount { get; set; }
        public virtual DbSet<Kagent> Kagent { get; set; }
        public virtual DbSet<KAgentAccount> KAgentAccount { get; set; }
        public virtual DbSet<KAgentDoc> KAgentDoc { get; set; }
        public virtual DbSet<KAgentPersons> KAgentPersons { get; set; }
        public virtual DbSet<KAgentSaldo> KAgentSaldo { get; set; }
        public virtual DbSet<KAgentTyp> KAgentTyp { get; set; }
        public virtual DbSet<KAKInd> KAKInd { get; set; }
        public virtual DbSet<KAMatDiscount> KAMatDiscount { get; set; }
        public virtual DbSet<KAMatGroupDiscount> KAMatGroupDiscount { get; set; }
        public virtual DbSet<Languages> Languages { get; set; }
        public virtual DbSet<Llicenses> Llicenses { get; set; }
        public virtual DbSet<MatChange> MatChange { get; set; }
        public virtual DbSet<Materials> Materials { get; set; }
        public virtual DbSet<MatGroup> MatGroup { get; set; }
        public virtual DbSet<MatGroupPrices> MatGroupPrices { get; set; }
        public virtual DbSet<MatPrices> MatPrices { get; set; }
        public virtual DbSet<MatRecDet> MatRecDet { get; set; }
        public virtual DbSet<MatRecipe> MatRecipe { get; set; }
        public virtual DbSet<MatRemains> MatRemains { get; set; }
        public virtual DbSet<Measures> Measures { get; set; }
        public virtual DbSet<MoneySaldo> MoneySaldo { get; set; }
        public virtual DbSet<OperLog> OperLog { get; set; }
        public virtual DbSet<PayDoc> PayDoc { get; set; }
        public virtual DbSet<PayDocType> PayDocType { get; set; }
        public virtual DbSet<PayType> PayType { get; set; }
        public virtual DbSet<PosRemains> PosRemains { get; set; }
        public virtual DbSet<PriceList> PriceList { get; set; }
        public virtual DbSet<PriceListDet> PriceListDet { get; set; }
        public virtual DbSet<PriceTypes> PriceTypes { get; set; }
        public virtual DbSet<PrintLog> PrintLog { get; set; }
        public virtual DbSet<Reports> Reports { get; set; }
        public virtual DbSet<ReturnRel> ReturnRel { get; set; }
        public virtual DbSet<Serials> Serials { get; set; }
        public virtual DbSet<Services> Services { get; set; }
        public virtual DbSet<SvcGroup> SvcGroup { get; set; }
        public virtual DbSet<Tables> Tables { get; set; }
        public virtual DbSet<TAXES> TAXES { get; set; }
        public virtual DbSet<TAXREESTRTYPE> TAXREESTRTYPE { get; set; }
        public virtual DbSet<TAXWB> TAXWB { get; set; }
        public virtual DbSet<TAXWBDET> TAXWBDET { get; set; }
        public virtual DbSet<TechProcDet> TechProcDet { get; set; }
        public virtual DbSet<TechProcess> TechProcess { get; set; }
        public virtual DbSet<UserAccess> UserAccess { get; set; }
        public virtual DbSet<UserAccessWh> UserAccessWh { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<UserTree> UserTree { get; set; }
        public virtual DbSet<UserTreeView> UserTreeView { get; set; }
        public virtual DbSet<Warehouse> Warehouse { get; set; }
        public virtual DbSet<WaybillDet> WaybillDet { get; set; }
        public virtual DbSet<WayBillDetAddProps> WayBillDetAddProps { get; set; }
        public virtual DbSet<WaybillList> WaybillList { get; set; }
        public virtual DbSet<WayBillMake> WayBillMake { get; set; }
        public virtual DbSet<WaybillMove> WaybillMove { get; set; }
        public virtual DbSet<WayBillSvc> WayBillSvc { get; set; }
        public virtual DbSet<WMatTurn> WMatTurn { get; set; }
        public virtual DbSet<DocsRel> DocsRel { get; set; }
        public virtual DbSet<RepLng> RepLng { get; set; }
        public virtual DbSet<ViewLng> ViewLng { get; set; }
        public virtual DbSet<WayBillDetTaxes> WayBillDetTaxes { get; set; }
        public virtual DbSet<EnterpriseAccount> EnterpriseAccount { get; set; }
        public virtual DbSet<KagentList> KagentList { get; set; }
        public virtual DbSet<MaterialsList> MaterialsList { get; set; }
        public virtual DbSet<UserTreeAccess> UserTreeAccess { get; set; }
        public virtual DbSet<v_GetDocsTree> v_GetDocsTree { get; set; }
        public virtual DbSet<v_KAgentAccount> v_KAgentAccount { get; set; }
        public virtual DbSet<v_MatRemains> v_MatRemains { get; set; }
        public virtual DbSet<v_PayDoc> v_PayDoc { get; set; }
        public virtual DbSet<v_PriceList> v_PriceList { get; set; }
        public virtual DbSet<v_PriceTypes> v_PriceTypes { get; set; }
        public virtual DbSet<v_Services> v_Services { get; set; }
        public virtual DbSet<v_TechProcDet> v_TechProcDet { get; set; }
        public virtual DbSet<v_WaybillList> v_WaybillList { get; set; }
        public virtual DbSet<v_WhMatRemains> v_WhMatRemains { get; set; }
    
        [DbFunction("sp_baseEntities", "GetDiscount")]
        public virtual IQueryable<GetDiscount_Result> GetDiscount(Nullable<int> ka_id, Nullable<int> mat_id)
        {
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDiscount_Result>("[sp_baseEntities].[GetDiscount](@ka_id, @mat_id)", ka_idParameter, mat_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetDocList")]
        public virtual IQueryable<GetDocList_Result> GetDocList(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> ka_id, Nullable<int> w_type)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var w_typeParameter = w_type.HasValue ?
                new ObjectParameter("w_type", w_type) :
                new ObjectParameter("w_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDocList_Result>("[sp_baseEntities].[GetDocList](@from_date, @to_date, @ka_id, @w_type)", from_dateParameter, to_dateParameter, ka_idParameter, w_typeParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetListMatPrices")]
        public virtual IQueryable<GetListMatPrices_Result> GetListMatPrices(Nullable<int> mat_id, Nullable<int> in_curr_id, Nullable<int> p_type)
        {
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            var in_curr_idParameter = in_curr_id.HasValue ?
                new ObjectParameter("in_curr_id", in_curr_id) :
                new ObjectParameter("in_curr_id", typeof(int));
    
            var p_typeParameter = p_type.HasValue ?
                new ObjectParameter("p_type", p_type) :
                new ObjectParameter("p_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetListMatPrices_Result>("[sp_baseEntities].[GetListMatPrices](@mat_id, @in_curr_id, @p_type)", mat_idParameter, in_curr_idParameter, p_typeParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetMakeAmount")]
        public virtual IQueryable<GetMakeAmount_Result> GetMakeAmount(Nullable<int> wbill_id)
        {
            var wbill_idParameter = wbill_id.HasValue ?
                new ObjectParameter("wbill_id", wbill_id) :
                new ObjectParameter("wbill_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetMakeAmount_Result>("[sp_baseEntities].[GetMakeAmount](@wbill_id)", wbill_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetMatChange")]
        public virtual IQueryable<GetMatChange_Result> GetMatChange(Nullable<int> mat_id)
        {
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetMatChange_Result>("[sp_baseEntities].[GetMatChange](@mat_id)", mat_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetMatExtra")]
        public virtual IQueryable<GetMatExtra_Result> GetMatExtra(Nullable<int> matId, Nullable<int> pTypeId, Nullable<System.DateTime> onDate, Nullable<decimal> price, Nullable<int> in_CurrId, Nullable<decimal> onValue)
        {
            var matIdParameter = matId.HasValue ?
                new ObjectParameter("MatId", matId) :
                new ObjectParameter("MatId", typeof(int));
    
            var pTypeIdParameter = pTypeId.HasValue ?
                new ObjectParameter("PTypeId", pTypeId) :
                new ObjectParameter("PTypeId", typeof(int));
    
            var onDateParameter = onDate.HasValue ?
                new ObjectParameter("OnDate", onDate) :
                new ObjectParameter("OnDate", typeof(System.DateTime));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var in_CurrIdParameter = in_CurrId.HasValue ?
                new ObjectParameter("in_CurrId", in_CurrId) :
                new ObjectParameter("in_CurrId", typeof(int));
    
            var onValueParameter = onValue.HasValue ?
                new ObjectParameter("OnValue", onValue) :
                new ObjectParameter("OnValue", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetMatExtra_Result>("[sp_baseEntities].[GetMatExtra](@MatId, @PTypeId, @OnDate, @Price, @in_CurrId, @OnValue)", matIdParameter, pTypeIdParameter, onDateParameter, priceParameter, in_CurrIdParameter, onValueParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetMatGroupTree")]
        public virtual IQueryable<GetMatGroupTree_Result> GetMatGroupTree(Nullable<int> root_cat_id)
        {
            var root_cat_idParameter = root_cat_id.HasValue ?
                new ObjectParameter("root_cat_id", root_cat_id) :
                new ObjectParameter("root_cat_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetMatGroupTree_Result>("[sp_baseEntities].[GetMatGroupTree](@root_cat_id)", root_cat_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetMatMove")]
        public virtual IQueryable<GetMatMove_Result> GetMatMove(Nullable<int> mat_id, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> wid, Nullable<int> ka_id, Nullable<int> w_type, string wh)
        {
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var widParameter = wid.HasValue ?
                new ObjectParameter("wid", wid) :
                new ObjectParameter("wid", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var w_typeParameter = w_type.HasValue ?
                new ObjectParameter("w_type", w_type) :
                new ObjectParameter("w_type", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetMatMove_Result>("[sp_baseEntities].[GetMatMove](@mat_id, @from_date, @to_date, @wid, @ka_id, @w_type, @wh)", mat_idParameter, from_dateParameter, to_dateParameter, widParameter, ka_idParameter, w_typeParameter, whParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetMatPriceTypes")]
        public virtual IQueryable<GetMatPriceTypes_Result> GetMatPriceTypes(Nullable<int> mat_id)
        {
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetMatPriceTypes_Result>("[sp_baseEntities].[GetMatPriceTypes](@mat_id)", mat_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetMatRsv")]
        public virtual IQueryable<GetMatRsv_Result> GetMatRsv(Nullable<int> mat_id, Nullable<int> ka_id, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> w_type)
        {
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var w_typeParameter = w_type.HasValue ?
                new ObjectParameter("w_type", w_type) :
                new ObjectParameter("w_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetMatRsv_Result>("[sp_baseEntities].[GetMatRsv](@mat_id, @ka_id, @from_date, @to_date, @w_type)", mat_idParameter, ka_idParameter, from_dateParameter, to_dateParameter, w_typeParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetOperLog")]
        public virtual IQueryable<GetOperLog_Result> GetOperLog(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> fun_id, Nullable<int> user_id)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var fun_idParameter = fun_id.HasValue ?
                new ObjectParameter("fun_id", fun_id) :
                new ObjectParameter("fun_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetOperLog_Result>("[sp_baseEntities].[GetOperLog](@from_date, @to_date, @fun_id, @user_id)", from_dateParameter, to_dateParameter, fun_idParameter, user_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetOrdered")]
        public virtual IQueryable<GetOrdered_Result> GetOrdered(Nullable<int> mat_id, Nullable<int> wid, Nullable<int> ka_id, Nullable<System.DateTime> on_date, Nullable<int> get_empty, string wh)
        {
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            var widParameter = wid.HasValue ?
                new ObjectParameter("wid", wid) :
                new ObjectParameter("wid", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var on_dateParameter = on_date.HasValue ?
                new ObjectParameter("on_date", on_date) :
                new ObjectParameter("on_date", typeof(System.DateTime));
    
            var get_emptyParameter = get_empty.HasValue ?
                new ObjectParameter("get_empty", get_empty) :
                new ObjectParameter("get_empty", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetOrdered_Result>("[sp_baseEntities].[GetOrdered](@mat_id, @wid, @ka_id, @on_date, @get_empty, @wh)", mat_idParameter, widParameter, ka_idParameter, on_dateParameter, get_emptyParameter, whParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetPosIn")]
        public virtual IQueryable<GetPosIn_Result> GetPosIn(Nullable<System.DateTime> on_data, Nullable<int> mat_id, Nullable<int> wid, Nullable<int> ka_id)
        {
            var on_dataParameter = on_data.HasValue ?
                new ObjectParameter("on_data", on_data) :
                new ObjectParameter("on_data", typeof(System.DateTime));
    
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            var widParameter = wid.HasValue ?
                new ObjectParameter("wid", wid) :
                new ObjectParameter("wid", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPosIn_Result>("[sp_baseEntities].[GetPosIn](@on_data, @mat_id, @wid, @ka_id)", on_dataParameter, mat_idParameter, widParameter, ka_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetPrintLog")]
        public virtual IQueryable<GetPrintLog_Result> GetPrintLog(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> user_id)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPrintLog_Result>("[sp_baseEntities].[GetPrintLog](@from_date, @to_date, @user_id)", from_dateParameter, to_dateParameter, user_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetRelDocList")]
        public virtual IQueryable<GetRelDocList_Result> GetRelDocList(Nullable<int> doc_id)
        {
            var doc_idParameter = doc_id.HasValue ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetRelDocList_Result>("[sp_baseEntities].[GetRelDocList](@doc_id)", doc_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetSvcGroupTree")]
        public virtual IQueryable<GetSvcGroupTree_Result> GetSvcGroupTree(Nullable<int> root_cat_id)
        {
            var root_cat_idParameter = root_cat_id.HasValue ?
                new ObjectParameter("root_cat_id", root_cat_id) :
                new ObjectParameter("root_cat_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetSvcGroupTree_Result>("[sp_baseEntities].[GetSvcGroupTree](@root_cat_id)", root_cat_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetWaybillDetIn")]
        public virtual IQueryable<GetWaybillDetIn_Result> GetWaybillDetIn(Nullable<int> wbill_id)
        {
            var wbill_idParameter = wbill_id.HasValue ?
                new ObjectParameter("wbill_id", wbill_id) :
                new ObjectParameter("wbill_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetWaybillDetIn_Result>("[sp_baseEntities].[GetWaybillDetIn](@wbill_id)", wbill_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetWayBillDetOut")]
        public virtual IQueryable<GetWayBillDetOut_Result> GetWayBillDetOut(Nullable<int> wbill_id)
        {
            var wbill_idParameter = wbill_id.HasValue ?
                new ObjectParameter("wbill_id", wbill_id) :
                new ObjectParameter("wbill_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetWayBillDetOut_Result>("[sp_baseEntities].[GetWayBillDetOut](@wbill_id)", wbill_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetWayBillList")]
        public virtual IQueryable<GetWayBillList_Result> GetWayBillList(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> w_type, Nullable<int> @checked, Nullable<int> ka_id, Nullable<int> show_null_balance, string wh, Nullable<int> ent_id)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var w_typeParameter = w_type.HasValue ?
                new ObjectParameter("w_type", w_type) :
                new ObjectParameter("w_type", typeof(int));
    
            var checkedParameter = @checked.HasValue ?
                new ObjectParameter("checked", @checked) :
                new ObjectParameter("checked", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var show_null_balanceParameter = show_null_balance.HasValue ?
                new ObjectParameter("show_null_balance", show_null_balance) :
                new ObjectParameter("show_null_balance", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            var ent_idParameter = ent_id.HasValue ?
                new ObjectParameter("ent_id", ent_id) :
                new ObjectParameter("ent_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetWayBillList_Result>("[sp_baseEntities].[GetWayBillList](@from_date, @to_date, @w_type, @checked, @ka_id, @show_null_balance, @wh, @ent_id)", from_dateParameter, to_dateParameter, w_typeParameter, checkedParameter, ka_idParameter, show_null_balanceParameter, whParameter, ent_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "GetWayBillListWh")]
        public virtual IQueryable<GetWayBillListWh_Result> GetWayBillListWh(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> w_type, Nullable<int> is_checked, string wh)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var w_typeParameter = w_type.HasValue ?
                new ObjectParameter("w_type", w_type) :
                new ObjectParameter("w_type", typeof(int));
    
            var is_checkedParameter = is_checked.HasValue ?
                new ObjectParameter("is_checked", is_checked) :
                new ObjectParameter("is_checked", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetWayBillListWh_Result>("[sp_baseEntities].[GetWayBillListWh](@from_date, @to_date, @w_type, @is_checked, @wh)", from_dateParameter, to_dateParameter, w_typeParameter, is_checkedParameter, whParameter);
        }
    
        [DbFunction("sp_baseEntities", "MatRemainByWh")]
        public virtual IQueryable<MatRemainByWh_Result> MatRemainByWh(Nullable<int> mat_id, Nullable<int> w_id, Nullable<int> ka_id, Nullable<System.DateTime> on_date, string wh)
        {
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            var w_idParameter = w_id.HasValue ?
                new ObjectParameter("w_id", w_id) :
                new ObjectParameter("w_id", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var on_dateParameter = on_date.HasValue ?
                new ObjectParameter("on_date", on_date) :
                new ObjectParameter("on_date", typeof(System.DateTime));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MatRemainByWh_Result>("[sp_baseEntities].[MatRemainByWh](@mat_id, @w_id, @ka_id, @on_date, @wh)", mat_idParameter, w_idParameter, ka_idParameter, on_dateParameter, whParameter);
        }
    
        [DbFunction("sp_baseEntities", "MoneyMoveList")]
        public virtual IQueryable<MoneyMoveList_Result> MoneyMoveList(Nullable<int> doc_type, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> is_checked)
        {
            var doc_typeParameter = doc_type.HasValue ?
                new ObjectParameter("doc_type", doc_type) :
                new ObjectParameter("doc_type", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var is_checkedParameter = is_checked.HasValue ?
                new ObjectParameter("is_checked", is_checked) :
                new ObjectParameter("is_checked", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MoneyMoveList_Result>("[sp_baseEntities].[MoneyMoveList](@doc_type, @from_date, @to_date, @is_checked)", doc_typeParameter, from_dateParameter, to_dateParameter, is_checkedParameter);
        }
    
        [DbFunction("sp_baseEntities", "MoneyOnDate")]
        public virtual IQueryable<MoneyOnDate_Result> MoneyOnDate(Nullable<System.DateTime> on_date)
        {
            var on_dateParameter = on_date.HasValue ?
                new ObjectParameter("on_date", on_date) :
                new ObjectParameter("on_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MoneyOnDate_Result>("[sp_baseEntities].[MoneyOnDate](@on_date)", on_dateParameter);
        }
    
        [DbFunction("sp_baseEntities", "MoneyTurnover")]
        public virtual IQueryable<MoneyTurnover_Result> MoneyTurnover(Nullable<int> fun_id, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> turn_type, Nullable<int> curr_id, Nullable<int> ka_id)
        {
            var fun_idParameter = fun_id.HasValue ?
                new ObjectParameter("fun_id", fun_id) :
                new ObjectParameter("fun_id", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var turn_typeParameter = turn_type.HasValue ?
                new ObjectParameter("turn_type", turn_type) :
                new ObjectParameter("turn_type", typeof(int));
    
            var curr_idParameter = curr_id.HasValue ?
                new ObjectParameter("curr_id", curr_id) :
                new ObjectParameter("curr_id", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MoneyTurnover_Result>("[sp_baseEntities].[MoneyTurnover](@fun_id, @from_date, @to_date, @turn_type, @curr_id, @ka_id)", fun_idParameter, from_dateParameter, to_dateParameter, turn_typeParameter, curr_idParameter, ka_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "OrderedList")]
        public virtual IQueryable<OrderedList_Result> OrderedList(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> mat_id, Nullable<int> ka_id, Nullable<int> w_type, Nullable<int> active)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var w_typeParameter = w_type.HasValue ?
                new ObjectParameter("w_type", w_type) :
                new ObjectParameter("w_type", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OrderedList_Result>("[sp_baseEntities].[OrderedList](@from_date, @to_date, @mat_id, @ka_id, @w_type, @active)", from_dateParameter, to_dateParameter, mat_idParameter, ka_idParameter, w_typeParameter, activeParameter);
        }
    
        [DbFunction("sp_baseEntities", "PosGet")]
        public virtual IQueryable<PosGet_Result> PosGet(Nullable<int> mat_id, Nullable<int> w_id, Nullable<int> ka_id, Nullable<System.DateTime> on_date, Nullable<int> get_empty, string wh)
        {
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            var w_idParameter = w_id.HasValue ?
                new ObjectParameter("w_id", w_id) :
                new ObjectParameter("w_id", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var on_dateParameter = on_date.HasValue ?
                new ObjectParameter("on_date", on_date) :
                new ObjectParameter("on_date", typeof(System.DateTime));
    
            var get_emptyParameter = get_empty.HasValue ?
                new ObjectParameter("get_empty", get_empty) :
                new ObjectParameter("get_empty", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PosGet_Result>("[sp_baseEntities].[PosGet](@mat_id, @w_id, @ka_id, @on_date, @get_empty, @wh)", mat_idParameter, w_idParameter, ka_idParameter, on_dateParameter, get_emptyParameter, whParameter);
        }
    
        [DbFunction("sp_baseEntities", "REP_10")]
        public virtual IQueryable<REP_10_Result> REP_10(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> grp_id, string wh, Nullable<int> show_all_mat)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            var show_all_matParameter = show_all_mat.HasValue ?
                new ObjectParameter("show_all_mat", show_all_mat) :
                new ObjectParameter("show_all_mat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<REP_10_Result>("[sp_baseEntities].[REP_10](@from_date, @to_date, @grp_id, @wh, @show_all_mat)", from_dateParameter, to_dateParameter, grp_idParameter, whParameter, show_all_matParameter);
        }
    
        [DbFunction("sp_baseEntities", "REP_13")]
        public virtual IQueryable<REP_13_Result> REP_13(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> grp_id, Nullable<int> ka_id, string wh, Nullable<int> only_return)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            var only_returnParameter = only_return.HasValue ?
                new ObjectParameter("only_return", only_return) :
                new ObjectParameter("only_return", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<REP_13_Result>("[sp_baseEntities].[REP_13](@from_date, @to_date, @grp_id, @ka_id, @wh, @only_return)", from_dateParameter, to_dateParameter, grp_idParameter, ka_idParameter, whParameter, only_returnParameter);
        }
    
        [DbFunction("sp_baseEntities", "REP_16")]
        public virtual IQueryable<REP_16_Result> REP_16(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> ka_id, Nullable<int> ctype, Nullable<int> showall)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var ctypeParameter = ctype.HasValue ?
                new ObjectParameter("ctype", ctype) :
                new ObjectParameter("ctype", typeof(int));
    
            var showallParameter = showall.HasValue ?
                new ObjectParameter("showall", showall) :
                new ObjectParameter("showall", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<REP_16_Result>("[sp_baseEntities].[REP_16](@from_date, @to_date, @ka_id, @ctype, @showall)", from_dateParameter, to_dateParameter, ka_idParameter, ctypeParameter, showallParameter);
        }
    
        [DbFunction("sp_baseEntities", "REP_17")]
        public virtual IQueryable<REP_17_Result> REP_17(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> grp_id, Nullable<int> ka_id)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<REP_17_Result>("[sp_baseEntities].[REP_17](@from_date, @to_date, @grp_id, @ka_id)", from_dateParameter, to_dateParameter, grp_idParameter, ka_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "REP_20")]
        public virtual IQueryable<REP_20_Result> REP_20(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> grp_id, Nullable<int> ka_id)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<REP_20_Result>("[sp_baseEntities].[REP_20](@from_date, @to_date, @grp_id, @ka_id)", from_dateParameter, to_dateParameter, grp_idParameter, ka_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "REP_27")]
        public virtual IQueryable<REP_27_Result> REP_27(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> ka_id, Nullable<int> grp_id, Nullable<int> mat_id)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(int));
    
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<REP_27_Result>("[sp_baseEntities].[REP_27](@from_date, @to_date, @ka_id, @grp_id, @mat_id)", from_dateParameter, to_dateParameter, ka_idParameter, grp_idParameter, mat_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "REP_29")]
        public virtual IQueryable<REP_29_Result> REP_29(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> ka_id, Nullable<int> grp_id, string wh)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<REP_29_Result>("[sp_baseEntities].[REP_29](@from_date, @to_date, @ka_id, @grp_id, @wh)", from_dateParameter, to_dateParameter, ka_idParameter, grp_idParameter, whParameter);
        }
    
        [DbFunction("sp_baseEntities", "REP_31")]
        public virtual IQueryable<REP_31_Result> REP_31(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> grp_id, Nullable<int> mat_id)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(int));
    
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<REP_31_Result>("[sp_baseEntities].[REP_31](@from_date, @to_date, @grp_id, @mat_id)", from_dateParameter, to_dateParameter, grp_idParameter, mat_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "SP_AUTO_RSV_WB_2")]
        public virtual IQueryable<SP_AUTO_RSV_WB_2_Result> SP_AUTO_RSV_WB_2(Nullable<int> wBILLID)
        {
            var wBILLIDParameter = wBILLID.HasValue ?
                new ObjectParameter("WBILLID", wBILLID) :
                new ObjectParameter("WBILLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SP_AUTO_RSV_WB_2_Result>("[sp_baseEntities].[SP_AUTO_RSV_WB_2](@WBILLID)", wBILLIDParameter);
        }
    
        [DbFunction("sp_baseEntities", "SP_CONTRACTS_LIST")]
        public virtual IQueryable<SP_CONTRACTS_LIST_Result> SP_CONTRACTS_LIST(Nullable<int> iN_DOCTYPE, Nullable<System.DateTime> iN_FROMDATE, Nullable<System.DateTime> iN_TODATE, Nullable<int> iN_KAID, Nullable<int> iN_CHECKED)
        {
            var iN_DOCTYPEParameter = iN_DOCTYPE.HasValue ?
                new ObjectParameter("IN_DOCTYPE", iN_DOCTYPE) :
                new ObjectParameter("IN_DOCTYPE", typeof(int));
    
            var iN_FROMDATEParameter = iN_FROMDATE.HasValue ?
                new ObjectParameter("IN_FROMDATE", iN_FROMDATE) :
                new ObjectParameter("IN_FROMDATE", typeof(System.DateTime));
    
            var iN_TODATEParameter = iN_TODATE.HasValue ?
                new ObjectParameter("IN_TODATE", iN_TODATE) :
                new ObjectParameter("IN_TODATE", typeof(System.DateTime));
    
            var iN_KAIDParameter = iN_KAID.HasValue ?
                new ObjectParameter("IN_KAID", iN_KAID) :
                new ObjectParameter("IN_KAID", typeof(int));
    
            var iN_CHECKEDParameter = iN_CHECKED.HasValue ?
                new ObjectParameter("IN_CHECKED", iN_CHECKED) :
                new ObjectParameter("IN_CHECKED", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SP_CONTRACTS_LIST_Result>("[sp_baseEntities].[SP_CONTRACTS_LIST](@IN_DOCTYPE, @IN_FROMDATE, @IN_TODATE, @IN_KAID, @IN_CHECKED)", iN_DOCTYPEParameter, iN_FROMDATEParameter, iN_TODATEParameter, iN_KAIDParameter, iN_CHECKEDParameter);
        }
    
        [DbFunction("sp_baseEntities", "SP_GET_ACTIVES")]
        public virtual IQueryable<SP_GET_ACTIVES_Result> SP_GET_ACTIVES(Nullable<System.DateTime> fROMDATE, Nullable<System.DateTime> tODATE)
        {
            var fROMDATEParameter = fROMDATE.HasValue ?
                new ObjectParameter("FROMDATE", fROMDATE) :
                new ObjectParameter("FROMDATE", typeof(System.DateTime));
    
            var tODATEParameter = tODATE.HasValue ?
                new ObjectParameter("TODATE", tODATE) :
                new ObjectParameter("TODATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SP_GET_ACTIVES_Result>("[sp_baseEntities].[SP_GET_ACTIVES](@FROMDATE, @TODATE)", fROMDATEParameter, tODATEParameter);
        }
    
        [DbFunction("sp_baseEntities", "SP_GET_AVG_PRICE")]
        public virtual IQueryable<SP_GET_AVG_PRICE_Result> SP_GET_AVG_PRICE(Nullable<int> iN_POSID)
        {
            var iN_POSIDParameter = iN_POSID.HasValue ?
                new ObjectParameter("IN_POSID", iN_POSID) :
                new ObjectParameter("IN_POSID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SP_GET_AVG_PRICE_Result>("[sp_baseEntities].[SP_GET_AVG_PRICE](@IN_POSID)", iN_POSIDParameter);
        }
    
        [DbFunction("sp_baseEntities", "SP_GET_MAT_NDS")]
        public virtual IQueryable<SP_GET_MAT_NDS_Result> SP_GET_MAT_NDS(Nullable<int> mATID)
        {
            var mATIDParameter = mATID.HasValue ?
                new ObjectParameter("MATID", mATID) :
                new ObjectParameter("MATID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SP_GET_MAT_NDS_Result>("[sp_baseEntities].[SP_GET_MAT_NDS](@MATID)", mATIDParameter);
        }
    
        [DbFunction("sp_baseEntities", "SP_GET_MATGRP_NDS")]
        public virtual IQueryable<SP_GET_MATGRP_NDS_Result> SP_GET_MATGRP_NDS(Nullable<int> gRPID)
        {
            var gRPIDParameter = gRPID.HasValue ?
                new ObjectParameter("GRPID", gRPID) :
                new ObjectParameter("GRPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SP_GET_MATGRP_NDS_Result>("[sp_baseEntities].[SP_GET_MATGRP_NDS](@GRPID)", gRPIDParameter);
        }
    
        [DbFunction("sp_baseEntities", "SP_GET_RELDOCIDS")]
        public virtual IQueryable<SP_GET_RELDOCIDS_Result> SP_GET_RELDOCIDS(Nullable<int> aDOCID)
        {
            var aDOCIDParameter = aDOCID.HasValue ?
                new ObjectParameter("ADOCID", aDOCID) :
                new ObjectParameter("ADOCID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SP_GET_RELDOCIDS_Result>("[sp_baseEntities].[SP_GET_RELDOCIDS](@ADOCID)", aDOCIDParameter);
        }
    
        [DbFunction("sp_baseEntities", "SP_MAT_REMAIN_GET_SIMPLE")]
        public virtual IQueryable<SP_MAT_REMAIN_GET_SIMPLE_Result> SP_MAT_REMAIN_GET_SIMPLE(Nullable<int> matId, Nullable<System.DateTime> onDate)
        {
            var matIdParameter = matId.HasValue ?
                new ObjectParameter("MatId", matId) :
                new ObjectParameter("MatId", typeof(int));
    
            var onDateParameter = onDate.HasValue ?
                new ObjectParameter("OnDate", onDate) :
                new ObjectParameter("OnDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SP_MAT_REMAIN_GET_SIMPLE_Result>("[sp_baseEntities].[SP_MAT_REMAIN_GET_SIMPLE](@MatId, @OnDate)", matIdParameter, onDateParameter);
        }
    
        [DbFunction("sp_baseEntities", "SP_MATCHANGE_GET_WP")]
        public virtual IQueryable<SP_MATCHANGE_GET_WP_Result> SP_MATCHANGE_GET_WP(Nullable<int> mATID, Nullable<System.DateTime> mCDATE)
        {
            var mATIDParameter = mATID.HasValue ?
                new ObjectParameter("MATID", mATID) :
                new ObjectParameter("MATID", typeof(int));
    
            var mCDATEParameter = mCDATE.HasValue ?
                new ObjectParameter("MCDATE", mCDATE) :
                new ObjectParameter("MCDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SP_MATCHANGE_GET_WP_Result>("[sp_baseEntities].[SP_MATCHANGE_GET_WP](@MATID, @MCDATE)", mATIDParameter, mCDATEParameter);
        }
    
        [DbFunction("sp_baseEntities", "SP_WMAT_GET_BY_WHLIST")]
        public virtual IQueryable<SP_WMAT_GET_BY_WHLIST_Result> SP_WMAT_GET_BY_WHLIST(Nullable<int> iN_MATID, Nullable<System.DateTime> oNDATE, string wH)
        {
            var iN_MATIDParameter = iN_MATID.HasValue ?
                new ObjectParameter("IN_MATID", iN_MATID) :
                new ObjectParameter("IN_MATID", typeof(int));
    
            var oNDATEParameter = oNDATE.HasValue ?
                new ObjectParameter("ONDATE", oNDATE) :
                new ObjectParameter("ONDATE", typeof(System.DateTime));
    
            var wHParameter = wH != null ?
                new ObjectParameter("WH", wH) :
                new ObjectParameter("WH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SP_WMAT_GET_BY_WHLIST_Result>("[sp_baseEntities].[SP_WMAT_GET_BY_WHLIST](@IN_MATID, @ONDATE, @WH)", iN_MATIDParameter, oNDATEParameter, wHParameter);
        }
    
        [DbFunction("sp_baseEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string sep, string s)
        {
            var sepParameter = sep != null ?
                new ObjectParameter("sep", sep) :
                new ObjectParameter("sep", typeof(string));
    
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[sp_baseEntities].[Split](@sep, @s)", sepParameter, sParameter);
        }
    
        [DbFunction("sp_baseEntities", "WBDGetOutP2")]
        public virtual IQueryable<WBDGetOutP2_Result> WBDGetOutP2(Nullable<int> wbill_id)
        {
            var wbill_idParameter = wbill_id.HasValue ?
                new ObjectParameter("wbill_id", wbill_id) :
                new ObjectParameter("wbill_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WBDGetOutP2_Result>("[sp_baseEntities].[WBDGetOutP2](@wbill_id)", wbill_idParameter);
        }
    
        [DbFunction("sp_baseEntities", "WhMatGet")]
        public virtual IQueryable<WhMatGet_Result> WhMatGet(Nullable<int> grp_id, Nullable<int> wid, Nullable<int> ka_id, Nullable<System.DateTime> on_date, Nullable<int> get_empty, string wh, Nullable<int> show_all_mats, string grp, Nullable<int> user_id, Nullable<int> get_child_node)
        {
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(int));
    
            var widParameter = wid.HasValue ?
                new ObjectParameter("wid", wid) :
                new ObjectParameter("wid", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var on_dateParameter = on_date.HasValue ?
                new ObjectParameter("on_date", on_date) :
                new ObjectParameter("on_date", typeof(System.DateTime));
    
            var get_emptyParameter = get_empty.HasValue ?
                new ObjectParameter("get_empty", get_empty) :
                new ObjectParameter("get_empty", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            var show_all_matsParameter = show_all_mats.HasValue ?
                new ObjectParameter("show_all_mats", show_all_mats) :
                new ObjectParameter("show_all_mats", typeof(int));
    
            var grpParameter = grp != null ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(string));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var get_child_nodeParameter = get_child_node.HasValue ?
                new ObjectParameter("get_child_node", get_child_node) :
                new ObjectParameter("get_child_node", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WhMatGet_Result>("[sp_baseEntities].[WhMatGet](@grp_id, @wid, @ka_id, @on_date, @get_empty, @wh, @show_all_mats, @grp, @user_id, @get_child_node)", grp_idParameter, widParameter, ka_idParameter, on_dateParameter, get_emptyParameter, whParameter, show_all_matsParameter, grpParameter, user_idParameter, get_child_nodeParameter);
        }
    
        public virtual int DeleteAllReservePosition(Nullable<int> wbill_id)
        {
            var wbill_idParameter = wbill_id.HasValue ?
                new ObjectParameter("wbill_id", wbill_id) :
                new ObjectParameter("wbill_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAllReservePosition", wbill_idParameter);
        }
    
        public virtual ObjectResult<DiscountList_Result> DiscountList(Nullable<int> ka_id)
        {
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DiscountList_Result>("DiscountList", ka_idParameter);
        }
    
        public virtual ObjectResult<DocCopy_Result> DocCopy(Nullable<int> doc_id)
        {
            var doc_idParameter = doc_id.HasValue ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DocCopy_Result>("DocCopy", doc_idParameter);
        }
    
        public virtual ObjectResult<EXECUTESQL_EXAMPLER_Result> EXECUTESQL_EXAMPLER(Nullable<int> iN_MATID, Nullable<System.DateTime> oNDATE, string wH)
        {
            var iN_MATIDParameter = iN_MATID.HasValue ?
                new ObjectParameter("IN_MATID", iN_MATID) :
                new ObjectParameter("IN_MATID", typeof(int));
    
            var oNDATEParameter = oNDATE.HasValue ?
                new ObjectParameter("ONDATE", oNDATE) :
                new ObjectParameter("ONDATE", typeof(System.DateTime));
    
            var wHParameter = wH != null ?
                new ObjectParameter("WH", wH) :
                new ObjectParameter("WH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EXECUTESQL_EXAMPLER_Result>("EXECUTESQL_EXAMPLER", iN_MATIDParameter, oNDATEParameter, wHParameter);
        }
    
        public virtual ObjectResult<ExecuteWayBill_Result> ExecuteWayBill(Nullable<int> wBILLID, Nullable<int> nEW_WTYPE)
        {
            var wBILLIDParameter = wBILLID.HasValue ?
                new ObjectParameter("WBILLID", wBILLID) :
                new ObjectParameter("WBILLID", typeof(int));
    
            var nEW_WTYPEParameter = nEW_WTYPE.HasValue ?
                new ObjectParameter("NEW_WTYPE", nEW_WTYPE) :
                new ObjectParameter("NEW_WTYPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExecuteWayBill_Result>("ExecuteWayBill", wBILLIDParameter, nEW_WTYPEParameter);
        }
    
        public virtual ObjectResult<GetActualRemainByWh_Result> GetActualRemainByWh(Nullable<int> wid, Nullable<int> mat_id)
        {
            var widParameter = wid.HasValue ?
                new ObjectParameter("wid", wid) :
                new ObjectParameter("wid", typeof(int));
    
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetActualRemainByWh_Result>("GetActualRemainByWh", widParameter, mat_idParameter);
        }
    
        public virtual ObjectResult<string> GetCounter(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCounter", nameParameter);
        }
    
        public virtual int GetDeboningDet(Nullable<int> wbill_id)
        {
            var wbill_idParameter = wbill_id.HasValue ?
                new ObjectParameter("wbill_id", wbill_id) :
                new ObjectParameter("wbill_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetDeboningDet", wbill_idParameter);
        }
    
        public virtual ObjectResult<GetDirTree_Result> GetDirTree(Nullable<int> user_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDirTree_Result>("GetDirTree", user_idParameter);
        }
    
        public virtual ObjectResult<GetFinancesTree_Result> GetFinancesTree(Nullable<int> user_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFinancesTree_Result>("GetFinancesTree", user_idParameter);
        }
    
        public virtual ObjectResult<GetManufactureTree_Result> GetManufactureTree(Nullable<int> user_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetManufactureTree_Result>("GetManufactureTree", user_idParameter);
        }
    
        public virtual ObjectResult<GetMatList_Result> GetMatList(Nullable<int> grp, Nullable<int> get_price, Nullable<int> get_archived, Nullable<int> get_child_node)
        {
            var grpParameter = grp.HasValue ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(int));
    
            var get_priceParameter = get_price.HasValue ?
                new ObjectParameter("get_price", get_price) :
                new ObjectParameter("get_price", typeof(int));
    
            var get_archivedParameter = get_archived.HasValue ?
                new ObjectParameter("get_archived", get_archived) :
                new ObjectParameter("get_archived", typeof(int));
    
            var get_child_nodeParameter = get_child_node.HasValue ?
                new ObjectParameter("get_child_node", get_child_node) :
                new ObjectParameter("get_child_node", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMatList_Result>("GetMatList", grpParameter, get_priceParameter, get_archivedParameter, get_child_nodeParameter);
        }
    
        public virtual ObjectResult<GetMatRemain_Result> GetMatRemain(Nullable<int> wid, Nullable<int> mat_id)
        {
            var widParameter = wid.HasValue ?
                new ObjectParameter("wid", wid) :
                new ObjectParameter("wid", typeof(int));
    
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMatRemain_Result>("GetMatRemain", widParameter, mat_idParameter);
        }
    
        public virtual ObjectResult<GetMatTree_Result> GetMatTree(Nullable<int> p_type, Nullable<int> curr_id)
        {
            var p_typeParameter = p_type.HasValue ?
                new ObjectParameter("p_type", p_type) :
                new ObjectParameter("p_type", typeof(int));
    
            var curr_idParameter = curr_id.HasValue ?
                new ObjectParameter("curr_id", curr_id) :
                new ObjectParameter("curr_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMatTree_Result>("GetMatTree", p_typeParameter, curr_idParameter);
        }
    
        public virtual ObjectResult<GetOrderedInSuppliers_Result> GetOrderedInSuppliers(Nullable<int> wbill_id)
        {
            var wbill_idParameter = wbill_id.HasValue ?
                new ObjectParameter("wbill_id", wbill_id) :
                new ObjectParameter("wbill_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderedInSuppliers_Result>("GetOrderedInSuppliers", wbill_idParameter);
        }
    
        public virtual ObjectResult<GetPayDocList_Result> GetPayDocList(Nullable<int> doc_type, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> ka_id, Nullable<int> @checked, Nullable<int> pay_type)
        {
            var doc_typeParameter = doc_type.HasValue ?
                new ObjectParameter("doc_type", doc_type) :
                new ObjectParameter("doc_type", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var checkedParameter = @checked.HasValue ?
                new ObjectParameter("checked", @checked) :
                new ObjectParameter("checked", typeof(int));
    
            var pay_typeParameter = pay_type.HasValue ?
                new ObjectParameter("pay_type", pay_type) :
                new ObjectParameter("pay_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPayDocList_Result>("GetPayDocList", doc_typeParameter, from_dateParameter, to_dateParameter, ka_idParameter, checkedParameter, pay_typeParameter);
        }
    
        public virtual ObjectResult<GetPosOut_Result> GetPosOut(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> mat_id, Nullable<int> ka_id, Nullable<int> w_type)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var w_typeParameter = w_type.HasValue ?
                new ObjectParameter("w_type", w_type) :
                new ObjectParameter("w_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPosOut_Result>("GetPosOut", from_dateParameter, to_dateParameter, mat_idParameter, ka_idParameter, w_typeParameter);
        }
    
        public virtual ObjectResult<GetPriceListDet_Result> GetPriceListDet(Nullable<int> pl_id)
        {
            var pl_idParameter = pl_id.HasValue ?
                new ObjectParameter("pl_id", pl_id) :
                new ObjectParameter("pl_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPriceListDet_Result>("GetPriceListDet", pl_idParameter);
        }
    
        public virtual ObjectResult<GetRecipe_Result> GetRecipe(Nullable<int> wbill_id)
        {
            var wbill_idParameter = wbill_id.HasValue ?
                new ObjectParameter("wbill_id", wbill_id) :
                new ObjectParameter("wbill_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRecipe_Result>("GetRecipe", wbill_idParameter);
        }
    
        public virtual ObjectResult<GetReportTree_Result> GetReportTree(Nullable<int> user_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReportTree_Result>("GetReportTree", user_idParameter);
        }
    
        public virtual ObjectResult<GetSaldoDetTree_Result> GetSaldoDetTree(Nullable<int> user_id, Nullable<int> id, Nullable<System.DateTime> on_date)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var on_dateParameter = on_date.HasValue ?
                new ObjectParameter("on_date", on_date) :
                new ObjectParameter("on_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSaldoDetTree_Result>("GetSaldoDetTree", user_idParameter, idParameter, on_dateParameter);
        }
    
        public virtual ObjectResult<GetServiceTree_Result> GetServiceTree(Nullable<int> user_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetServiceTree_Result>("GetServiceTree", user_idParameter);
        }
    
        public virtual ObjectResult<GetShippedPosIn_Result> GetShippedPosIn(Nullable<int> pos_id)
        {
            var pos_idParameter = pos_id.HasValue ?
                new ObjectParameter("pos_id", pos_id) :
                new ObjectParameter("pos_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetShippedPosIn_Result>("GetShippedPosIn", pos_idParameter);
        }
    
        public virtual ObjectResult<GetSvcTree_Result> GetSvcTree()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSvcTree_Result>("GetSvcTree");
        }
    
        public virtual ObjectResult<GetUserAccessTree_Result> GetUserAccessTree(Nullable<int> user_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserAccessTree_Result>("GetUserAccessTree", user_idParameter);
        }
    
        public virtual ObjectResult<GetUserAccessWh_Result> GetUserAccessWh(Nullable<int> user_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserAccessWh_Result>("GetUserAccessWh", user_idParameter);
        }
    
        public virtual ObjectResult<GetWhTree_Result> GetWhTree(Nullable<int> user_id, Nullable<int> type_tree)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var type_treeParameter = type_tree.HasValue ?
                new ObjectParameter("type_tree", type_tree) :
                new ObjectParameter("type_tree", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetWhTree_Result>("GetWhTree", user_idParameter, type_treeParameter);
        }
    
        public virtual ObjectResult<RecalcActives_Result> RecalcActives(Nullable<System.DateTime> on_date)
        {
            var on_dateParameter = on_date.HasValue ?
                new ObjectParameter("on_date", on_date) :
                new ObjectParameter("on_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecalcActives_Result>("RecalcActives", on_dateParameter);
        }
    
        public virtual int RecalcRemainsMat(Nullable<int> mat_id)
        {
            var mat_idParameter = mat_id.HasValue ?
                new ObjectParameter("mat_id", mat_id) :
                new ObjectParameter("mat_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecalcRemainsMat", mat_idParameter);
        }
    
        public virtual ObjectResult<REP_1_Result> REP_1(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> grp_id, Nullable<int> ka_id, string wh, string doc_types)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            var doc_typesParameter = doc_types != null ?
                new ObjectParameter("doc_types", doc_types) :
                new ObjectParameter("doc_types", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<REP_1_Result>("REP_1", from_dateParameter, to_dateParameter, grp_idParameter, ka_idParameter, whParameter, doc_typesParameter);
        }
    
        public virtual ObjectResult<REP_2_Result> REP_2(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> grp_id, Nullable<int> ka_id, string wh, string doc_types, Nullable<int> wb_status)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            var doc_typesParameter = doc_types != null ?
                new ObjectParameter("doc_types", doc_types) :
                new ObjectParameter("doc_types", typeof(string));
    
            var wb_statusParameter = wb_status.HasValue ?
                new ObjectParameter("wb_status", wb_status) :
                new ObjectParameter("wb_status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<REP_2_Result>("REP_2", from_dateParameter, to_dateParameter, grp_idParameter, ka_idParameter, whParameter, doc_typesParameter, wb_statusParameter);
        }
    
        public virtual ObjectResult<REP_3_14_Result> REP_3_14(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> grp_id, Nullable<int> ka_id, string wh, string doc_types)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            var doc_typesParameter = doc_types != null ?
                new ObjectParameter("doc_types", doc_types) :
                new ObjectParameter("doc_types", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<REP_3_14_Result>("REP_3_14", from_dateParameter, to_dateParameter, grp_idParameter, ka_idParameter, whParameter, doc_typesParameter);
        }
    
        public virtual ObjectResult<REP_4_25_Result> REP_4_25(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> grp_id, Nullable<int> ka_id, string wh, string doc_types)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(int));
    
            var ka_idParameter = ka_id.HasValue ?
                new ObjectParameter("ka_id", ka_id) :
                new ObjectParameter("ka_id", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            var doc_typesParameter = doc_types != null ?
                new ObjectParameter("doc_types", doc_types) :
                new ObjectParameter("doc_types", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<REP_4_25_Result>("REP_4_25", from_dateParameter, to_dateParameter, grp_idParameter, ka_idParameter, whParameter, doc_typesParameter);
        }
    
        public virtual ObjectResult<ReservedAllPosition_Result> ReservedAllPosition(Nullable<int> wbill_id)
        {
            var wbill_idParameter = wbill_id.HasValue ?
                new ObjectParameter("wbill_id", wbill_id) :
                new ObjectParameter("wbill_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReservedAllPosition_Result>("ReservedAllPosition", wbill_idParameter);
        }
    
        public virtual int ReservedPosition(Nullable<int> pos_id, ObjectParameter rsv)
        {
            var pos_idParameter = pos_id.HasValue ?
                new ObjectParameter("pos_id", pos_id) :
                new ObjectParameter("pos_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReservedPosition", pos_idParameter, rsv);
        }
    
        public virtual int SP_AUTO_RSV_2(Nullable<int> wBD_POSID, ObjectParameter rSV)
        {
            var wBD_POSIDParameter = wBD_POSID.HasValue ?
                new ObjectParameter("WBD_POSID", wBD_POSID) :
                new ObjectParameter("WBD_POSID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AUTO_RSV_2", wBD_POSIDParameter, rSV);
        }
    
        public virtual int SP_CONTR_RESULT_UPD(Nullable<int> cONTR_DOCID)
        {
            var cONTR_DOCIDParameter = cONTR_DOCID.HasValue ?
                new ObjectParameter("CONTR_DOCID", cONTR_DOCID) :
                new ObjectParameter("CONTR_DOCID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CONTR_RESULT_UPD", cONTR_DOCIDParameter);
        }
    
        public virtual int SP_DEL_DOCREL(Nullable<int> pOSID, Nullable<int> sOURCEID)
        {
            var pOSIDParameter = pOSID.HasValue ?
                new ObjectParameter("POSID", pOSID) :
                new ObjectParameter("POSID", typeof(int));
    
            var sOURCEIDParameter = sOURCEID.HasValue ?
                new ObjectParameter("SOURCEID", sOURCEID) :
                new ObjectParameter("SOURCEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DEL_DOCREL", pOSIDParameter, sOURCEIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_NEWDOC(Nullable<int> dOCTYPE)
        {
            var dOCTYPEParameter = dOCTYPE.HasValue ?
                new ObjectParameter("DOCTYPE", dOCTYPE) :
                new ObjectParameter("DOCTYPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_NEWDOC", dOCTYPEParameter);
        }
    
        public virtual int SP_ORDER_UPD_RSV(Nullable<int> wBILLID)
        {
            var wBILLIDParameter = wBILLID.HasValue ?
                new ObjectParameter("WBILLID", wBILLID) :
                new ObjectParameter("WBILLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ORDER_UPD_RSV", wBILLIDParameter);
        }
    
        public virtual int SP_RECALC_DOC_SALDO(Nullable<int> wBILLID)
        {
            var wBILLIDParameter = wBILLID.HasValue ?
                new ObjectParameter("WBILLID", wBILLID) :
                new ObjectParameter("WBILLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RECALC_DOC_SALDO", wBILLIDParameter);
        }
    
        public virtual int SP_RECALC_KA_SALDO(Nullable<int> kAID, Nullable<System.DateTime> oNDATE)
        {
            var kAIDParameter = kAID.HasValue ?
                new ObjectParameter("KAID", kAID) :
                new ObjectParameter("KAID", typeof(int));
    
            var oNDATEParameter = oNDATE.HasValue ?
                new ObjectParameter("ONDATE", oNDATE) :
                new ObjectParameter("ONDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RECALC_KA_SALDO", kAIDParameter, oNDATEParameter);
        }
    
        public virtual int SP_RECALC_KA_SALDO_EX(Nullable<int> kAID, Nullable<System.DateTime> oNDATE)
        {
            var kAIDParameter = kAID.HasValue ?
                new ObjectParameter("KAID", kAID) :
                new ObjectParameter("KAID", typeof(int));
    
            var oNDATEParameter = oNDATE.HasValue ?
                new ObjectParameter("ONDATE", oNDATE) :
                new ObjectParameter("ONDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RECALC_KA_SALDO_EX", kAIDParameter, oNDATEParameter);
        }
    
        public virtual int SP_RECALC_MATREMAINS(Nullable<int> mATID, Nullable<System.DateTime> oNDATE, Nullable<int> aFTERDEL)
        {
            var mATIDParameter = mATID.HasValue ?
                new ObjectParameter("MATID", mATID) :
                new ObjectParameter("MATID", typeof(int));
    
            var oNDATEParameter = oNDATE.HasValue ?
                new ObjectParameter("ONDATE", oNDATE) :
                new ObjectParameter("ONDATE", typeof(System.DateTime));
    
            var aFTERDELParameter = aFTERDEL.HasValue ?
                new ObjectParameter("AFTERDEL", aFTERDEL) :
                new ObjectParameter("AFTERDEL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RECALC_MATREMAINS", mATIDParameter, oNDATEParameter, aFTERDELParameter);
        }
    
        public virtual int SP_RECALC_MONEY_SALDO(Nullable<System.DateTime> oNDATE, Nullable<int> aCCID, Nullable<int> cASHID, Nullable<int> cURRID, Nullable<int> sALDOTYPE)
        {
            var oNDATEParameter = oNDATE.HasValue ?
                new ObjectParameter("ONDATE", oNDATE) :
                new ObjectParameter("ONDATE", typeof(System.DateTime));
    
            var aCCIDParameter = aCCID.HasValue ?
                new ObjectParameter("ACCID", aCCID) :
                new ObjectParameter("ACCID", typeof(int));
    
            var cASHIDParameter = cASHID.HasValue ?
                new ObjectParameter("CASHID", cASHID) :
                new ObjectParameter("CASHID", typeof(int));
    
            var cURRIDParameter = cURRID.HasValue ?
                new ObjectParameter("CURRID", cURRID) :
                new ObjectParameter("CURRID", typeof(int));
    
            var sALDOTYPEParameter = sALDOTYPE.HasValue ?
                new ObjectParameter("SALDOTYPE", sALDOTYPE) :
                new ObjectParameter("SALDOTYPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RECALC_MONEY_SALDO", oNDATEParameter, aCCIDParameter, cASHIDParameter, cURRIDParameter, sALDOTYPEParameter);
        }
    
        public virtual int SP_RECALC_MONEY_SALDO_EX(Nullable<System.DateTime> oNDATE, Nullable<int> aCCID, Nullable<int> cASHID, Nullable<int> cURRID, Nullable<int> sALDOTYPE)
        {
            var oNDATEParameter = oNDATE.HasValue ?
                new ObjectParameter("ONDATE", oNDATE) :
                new ObjectParameter("ONDATE", typeof(System.DateTime));
    
            var aCCIDParameter = aCCID.HasValue ?
                new ObjectParameter("ACCID", aCCID) :
                new ObjectParameter("ACCID", typeof(int));
    
            var cASHIDParameter = cASHID.HasValue ?
                new ObjectParameter("CASHID", cASHID) :
                new ObjectParameter("CASHID", typeof(int));
    
            var cURRIDParameter = cURRID.HasValue ?
                new ObjectParameter("CURRID", cURRID) :
                new ObjectParameter("CURRID", typeof(int));
    
            var sALDOTYPEParameter = sALDOTYPE.HasValue ?
                new ObjectParameter("SALDOTYPE", sALDOTYPE) :
                new ObjectParameter("SALDOTYPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RECALC_MONEY_SALDO_EX", oNDATEParameter, aCCIDParameter, cASHIDParameter, cURRIDParameter, sALDOTYPEParameter);
        }
    
        public virtual int SP_RECALC_POSREMAINS(Nullable<int> pOSID, Nullable<int> mATID, Nullable<int> wID, Nullable<System.DateTime> oNDATE, Nullable<int> aFTERDEL)
        {
            var pOSIDParameter = pOSID.HasValue ?
                new ObjectParameter("POSID", pOSID) :
                new ObjectParameter("POSID", typeof(int));
    
            var mATIDParameter = mATID.HasValue ?
                new ObjectParameter("MATID", mATID) :
                new ObjectParameter("MATID", typeof(int));
    
            var wIDParameter = wID.HasValue ?
                new ObjectParameter("WID", wID) :
                new ObjectParameter("WID", typeof(int));
    
            var oNDATEParameter = oNDATE.HasValue ?
                new ObjectParameter("ONDATE", oNDATE) :
                new ObjectParameter("ONDATE", typeof(System.DateTime));
    
            var aFTERDELParameter = aFTERDEL.HasValue ?
                new ObjectParameter("AFTERDEL", aFTERDEL) :
                new ObjectParameter("AFTERDEL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RECALC_POSREMAINS", pOSIDParameter, mATIDParameter, wIDParameter, oNDATEParameter, aFTERDELParameter);
        }
    
        public virtual int SP_RECALC_REMAINS(Nullable<int> pOSID, Nullable<int> mATID, Nullable<int> wID, Nullable<System.DateTime> oNDATE, Nullable<int> aFTERDEL)
        {
            var pOSIDParameter = pOSID.HasValue ?
                new ObjectParameter("POSID", pOSID) :
                new ObjectParameter("POSID", typeof(int));
    
            var mATIDParameter = mATID.HasValue ?
                new ObjectParameter("MATID", mATID) :
                new ObjectParameter("MATID", typeof(int));
    
            var wIDParameter = wID.HasValue ?
                new ObjectParameter("WID", wID) :
                new ObjectParameter("WID", typeof(int));
    
            var oNDATEParameter = oNDATE.HasValue ?
                new ObjectParameter("ONDATE", oNDATE) :
                new ObjectParameter("ONDATE", typeof(System.DateTime));
    
            var aFTERDELParameter = aFTERDEL.HasValue ?
                new ObjectParameter("AFTERDEL", aFTERDEL) :
                new ObjectParameter("AFTERDEL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RECALC_REMAINS", pOSIDParameter, mATIDParameter, wIDParameter, oNDATEParameter, aFTERDELParameter);
        }
    
        public virtual int SP_RECALC_REMAINS_EX(Nullable<int> pOSID, Nullable<int> mATID, Nullable<int> wID, Nullable<System.DateTime> oNDATE, Nullable<int> aFTERDEL)
        {
            var pOSIDParameter = pOSID.HasValue ?
                new ObjectParameter("POSID", pOSID) :
                new ObjectParameter("POSID", typeof(int));
    
            var mATIDParameter = mATID.HasValue ?
                new ObjectParameter("MATID", mATID) :
                new ObjectParameter("MATID", typeof(int));
    
            var wIDParameter = wID.HasValue ?
                new ObjectParameter("WID", wID) :
                new ObjectParameter("WID", typeof(int));
    
            var oNDATEParameter = oNDATE.HasValue ?
                new ObjectParameter("ONDATE", oNDATE) :
                new ObjectParameter("ONDATE", typeof(System.DateTime));
    
            var aFTERDELParameter = aFTERDEL.HasValue ?
                new ObjectParameter("AFTERDEL", aFTERDEL) :
                new ObjectParameter("AFTERDEL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RECALC_REMAINS_EX", pOSIDParameter, mATIDParameter, wIDParameter, oNDATEParameter, aFTERDELParameter);
        }
    
        public virtual int SP_RENUM_WB(Nullable<int> iN_WBILLID)
        {
            var iN_WBILLIDParameter = iN_WBILLID.HasValue ?
                new ObjectParameter("IN_WBILLID", iN_WBILLID) :
                new ObjectParameter("IN_WBILLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RENUM_WB", iN_WBILLIDParameter);
        }
    
        public virtual int SP_SET_DEBONINGDET(Nullable<int> iN_WBILLID)
        {
            var iN_WBILLIDParameter = iN_WBILLID.HasValue ?
                new ObjectParameter("IN_WBILLID", iN_WBILLID) :
                new ObjectParameter("IN_WBILLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_DEBONINGDET", iN_WBILLIDParameter);
        }
    
        public virtual int SP_SET_DOCREL(Nullable<int> dOCID, Nullable<int> rDOCID)
        {
            var dOCIDParameter = dOCID.HasValue ?
                new ObjectParameter("DOCID", dOCID) :
                new ObjectParameter("DOCID", typeof(int));
    
            var rDOCIDParameter = rDOCID.HasValue ?
                new ObjectParameter("RDOCID", rDOCID) :
                new ObjectParameter("RDOCID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_DOCREL", dOCIDParameter, rDOCIDParameter);
        }
    
        public virtual int SP_SET_EXTPOSID(Nullable<int> pOSID, Nullable<int> sOURCEID)
        {
            var pOSIDParameter = pOSID.HasValue ?
                new ObjectParameter("POSID", pOSID) :
                new ObjectParameter("POSID", typeof(int));
    
            var sOURCEIDParameter = sOURCEID.HasValue ?
                new ObjectParameter("SOURCEID", sOURCEID) :
                new ObjectParameter("SOURCEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_EXTPOSID", pOSIDParameter, sOURCEIDParameter);
        }
    
        public virtual int SP_UPD_DATE(Nullable<int> wBILLID, Nullable<System.DateTime> nEW_ONDATE, Nullable<System.DateTime> oLD_ONDATE)
        {
            var wBILLIDParameter = wBILLID.HasValue ?
                new ObjectParameter("WBILLID", wBILLID) :
                new ObjectParameter("WBILLID", typeof(int));
    
            var nEW_ONDATEParameter = nEW_ONDATE.HasValue ?
                new ObjectParameter("NEW_ONDATE", nEW_ONDATE) :
                new ObjectParameter("NEW_ONDATE", typeof(System.DateTime));
    
            var oLD_ONDATEParameter = oLD_ONDATE.HasValue ?
                new ObjectParameter("OLD_ONDATE", oLD_ONDATE) :
                new ObjectParameter("OLD_ONDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPD_DATE", wBILLIDParameter, nEW_ONDATEParameter, oLD_ONDATEParameter);
        }
    
        public virtual int SP_WMATTURN_UPD(Nullable<int> wBILLID, Nullable<int> tURNTYPE)
        {
            var wBILLIDParameter = wBILLID.HasValue ?
                new ObjectParameter("WBILLID", wBILLID) :
                new ObjectParameter("WBILLID", typeof(int));
    
            var tURNTYPEParameter = tURNTYPE.HasValue ?
                new ObjectParameter("TURNTYPE", tURNTYPE) :
                new ObjectParameter("TURNTYPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_WMATTURN_UPD", wBILLIDParameter, tURNTYPEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> StornoWayBill(Nullable<int> wbill_id)
        {
            var wbill_idParameter = wbill_id.HasValue ?
                new ObjectParameter("wbill_id", wbill_id) :
                new ObjectParameter("wbill_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("StornoWayBill", wbill_idParameter);
        }
    
        public virtual int UpdWaybillDetPrice(Nullable<int> wbill_id)
        {
            var wbill_idParameter = wbill_id.HasValue ?
                new ObjectParameter("wbill_id", wbill_id) :
                new ObjectParameter("wbill_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdWaybillDetPrice", wbill_idParameter);
        }
    
        public virtual ObjectResult<WBListMake_Result> WBListMake(Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<int> is_checked, string wh, Nullable<int> grp_id, Nullable<int> w_type)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var is_checkedParameter = is_checked.HasValue ?
                new ObjectParameter("is_checked", is_checked) :
                new ObjectParameter("is_checked", typeof(int));
    
            var whParameter = wh != null ?
                new ObjectParameter("wh", wh) :
                new ObjectParameter("wh", typeof(string));
    
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(int));
    
            var w_typeParameter = w_type.HasValue ?
                new ObjectParameter("w_type", w_type) :
                new ObjectParameter("w_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WBListMake_Result>("WBListMake", from_dateParameter, to_dateParameter, is_checkedParameter, whParameter, grp_idParameter, w_typeParameter);
        }
    }
}
