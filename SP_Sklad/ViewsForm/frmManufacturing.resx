<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="GridImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="GridImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="GridImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADi
        BgAAAk1TRnQBSQFMAgEBBAEAASgBBgEoAQYBEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AB4AMO+BAAPtA/wJADDvewABxgLF
        AaoCpgGQAX0BegGdAZkBlwG8AboBuQYAEu8BAAFzAgABcwEAGO9CAAFoAUkBAAFoAUkxAAHDAsIBnQGN
        AYoBzAGxAawBvwGkAaABxQGqAaQBnAGJAYUBxALCA/4P7wEAAXMBAAEXAcYBVQEJAbgBOQEAAXMBABXv
        PwABaAFJAQAB6wGlAQABvwGGAQABaAFJLgABqAGcAZoBygGrAacBwAGoAaQBywG8AboBvQGiAZ8BvgGf
        AZoBogGZAZcD/gzvAQABcwEAARQB1gF4ARQB1gF4ARcBqwEmARABpwEYAQABcwEAEu88AAFoAUkBAAH/
        AbsBHAH/AbsBHAGtAXkBAAGjAXIBAAFoAUkoAAPqAbgBowGfAdoBvwG8AbQBqQGoAwABsAGkAaIBxgGp
        AaYBowGPAYwD5gnvAQABcwEAARQB1gF4ARQB1gF4ASYBvwE6AR0BtgEsAR0BtgEsAR0BtgEsAQABcwEA
        D+8SAA+AGAABaAFJAQAB/wG7ARwB/wG7ARwB0QGSAQABuwGDAQABuwGDAQABuwGDAQABaAFJHwAD9gP7
        AwABugK1AfEB3QHbAcUBswGyAZQBjQGKAcEBrgGsAesB1gHTAbUBrgGtAwAG7wEXAasBJgE0Ac0BTwEp
        AdQBbgEwAcYBSgEAAZcCAAGXAQABFAHWAXgBHgHMAV0BJgG/AToBAAFzAQAM7xIAD4AVAAGtAXkBAAH5
        Aa4BAAH/AboBGAHrAaUBAAGHAV8BAAGHAV8BAAH/AbsBHAH7AbABAAHRAZIBAAFoAUkTAAP7A9MD8QGH
        AXsBeAGwAq0D5wGzAq4BywHAAb0B+AHtAesB/gH2AfUB/gH2AfUB3wHUAdMByALEA/4J7wEXAasBJgFD
        AdoBZgEAAZcBAAbvARABpwEYARAB7gGaARQB1gF4ASwBwgFCAQABcwEACe8SAA+AGAABrQF5AQAB/wG9
        ASIBhwFfBwABowFyAQAB/wHNAVgB/wG7ARwB3QGbAQABaAFJEAAD7wGWAXkBdQGvAZsBmAHVAcMBvwHA
        Aa0BqwGfAYUBgAHJAscDzQHEAb8BvQHZAc0CzAHHAcYBxQHEAcMGAAzvARcBqwEmDO8BCQG4ATkBFgHz
        AaIBIwHmAYMBNAHNAU8BAAFzAQAG7xIAD4AbAAGtAXkNAAG/AYYBAAH/AdEBZgH/AcUBPgH5Aa4BAAFo
        AUkKAAG0AbABrwGPAXwBegHXAcMBwAH1AuYB8QHeAeAB9QLjAfAB3gHdAZoBhgGEAYoBfgF9A/oD7wP9
        A/4GAB7vARcBxgFVARYB8wGiASMB5gGDAT0B0wFdAQABcwEAA+8SAA+ALQAB6wGlAQAB/wHRAWYB/wHF
        AT4B/wG3ARABaAFJBwAB0ALOAdEBsgGvAdYBvwG9AesB1wHWAewC3wHpAtoB3QLJAdYBvAG4AaEBlQGS
        EgAh7wEeAcwBXQEWAfMBogFAAeMBeQEBAWcBAQPvUQAB+wGwAQAB/wHRAWYB/wHEATwBXgFCBAAD7QGl
        AZEBjQHDAaYBoQHVAbsCuAGvAa4DAAHNAssB1wG+AbsBwAGmAqIBhgGCAcYCxA8AJO8BKQHUAW4BCQFx
        AQ0G71QAAf8BugEYAWwBSwcAA/sBwQK8AcQBqgGmAdUBvAG4AaEBlAGSA/QBrwGqAakBzwG1AbEBtwGa
        AZcBrwGaAZkB6QLoDwAw72MAAc8CzgHcAcYBwgHGAbEBrgHRAbwBuAG2AaMBoAHFAbEBrgHOAbkBtgHe
        AcYBwwGoAZ4BnRIAMO9jAAPeAcsCyQHAAa4BqQHQAb0BuAHXAcYBwwHXAcYBwwHhAdEBzgHBAb0BvAHT
        As4D/A8AMO9mAAP6AdUC0gHHAcEBvwHSAcUBwwHPAcgBxwHeAtoB0QLQFQAw72kAA/cDAAHSAdEB0gPu
        A/wD+hUAAUIBTQE+BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA/+DAAX/AecCAAX/AYMCAAL/
        AfwC/wMAAv8B+AF/Af8DAAL/AfABPwH+ARACAAH8AR8B4AEfAfkBAQIAAfwBHwHAAQ8BwAMAAfwBHwHj
        AQcBwAEDAgAB/AEfAfcBgwGAAQMCAAH8AR8B/wHBAYABPwIAA/8B4QEEAR8CAAP/AfMBAAEfAgAE/wGA
        AT8CAAT/AYABHwIABP8BwAF/AgAE/wHoAX8L
</value>
  </data>
</root>