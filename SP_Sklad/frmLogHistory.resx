<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="GridImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="GridImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAW
        EAAAAk1TRnQBSQFMAgEBBgEAAegBCAHoAQgBEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8A/wBjAAJrAcYCAAGcAgABnAIAAZwCAAGcAmsBxqsAAmsBxgIAAZwBAAEI
        Aa0BAAEYAcYBAAEYAcYBAAEIAa0CAAGcAmsBxqUAAmsBxgEAAQgBrQHWAd4B/wHWAd4B/wEQAUIB/wEQ
        AUIB/wHWAd4B/wHWAd4B/wIAAZwCawHGGwAPgHkAARgBxgEAARgBxgHWAd4B/wMAAdYB3gH/AdYB3gH/
        AwAB1gHeAf8BAAEYAcYBAAEYAcYbAA+AeQABGAHGAQABIQHnARABQgH/AdYB3gH/BgAB1gHeAf8BEAFC
        Af8BAAEhAecBAAEYAcYbAA+AeQABIQHnAQABIQHnARABQgH/AdYB3gH/BgAB1gHeAf8BEAFCAf8BAAEh
        AecBAAEhAecbAA+AeQABIQHnAQABIQHnAdYB3gH/AwAB1gHeAf8B1gHeAf8DAAHWAd4B/wEAASEB5wEA
        ASEB5xsAD4B4AAFzAYwB7wEAASEB5wHWAd4B/wHWAd4B/wEQAUIB/wEQAUIB/wHWAd4B/wHWAd4B/wEA
        ASEB5wFjAXMB1qUAAmsBxgEAATEB/wEAATEB/wEAATEB/wEAATEB/wEAATEB/wEAATEB/wJrAcarAAFz
        AYwB7wEAATEB/wEAATEB/wEAATEB/wEAATEB/wFzAYwB7/8A/wDwAAHWAZwBewGtAVIBKQHWAbUBlAMA
        AYQBtQF7AQABawEAARABewEQAZwBxgGcGAABzgGcAXsBrQFSASEB1gGtAZSHAAGlAUIBEAHGAXsBSgGl
        AUIBEAGtAVIBIQEIAXsBEAEhAb0BKQFjAf8BnAEAAWsWAAHvAd4B1gGlAUIBCAG9AXsBSgGlAUIBCAGt
        AVIBIQHOAaUBlBgAAjkBnAIYAZQeAAJaAZwCEAF7PAABxgGMAWMBxgGEAUoC/wHeAv8B1gHOAZwBcwEI
        AYwBCAEhAcYBOQFrAf8BnAEAAWsWAAHGAYQBYwHGAXsBSgH/AfcB1gH/AfcB1gHOAZQBawGlAUIBCAGl
        AUoBGAHOAaUBjAwAApwBzgEIARgBpQEAASkB7wEIASkB3gExATkBnBUAAa0BtQHOARABGAGUAQABCAGl
        ApwBtRMAAXMCAAFzJQABtQFSARgB9wHnAcYBhAG9AVIBEAGlARgBEAGcAhABnAEhATEBzgFKAWMB/wGc
        AQgBewIIAXMCCAFzAQABhAG1AYQJAAHnAdYBzgGtAVIBEAH3AecBvQH/AdYBrQHeAb0BrQHnAdYBvQH/
        AfcB1gHOAZQBYwGlAUIBCAGlAUoBGAHOAaUBjAYAAiEBpQFSAZwB/wEYAVoB/wEAATEB/wEIASEBxgJr
        Aa0PAAJKAZwBAAEQAa0BAAEQAb0BcwF7Aa0TAAFzAQABFwHGAVUBCQG4ATkBAAFzHwABzgGMAVoBzgGc
        AWMB/wHvAcYBEAGtASEBawH/AZwBYwH/AZwBYwH/AZQBOQHWAVoBOQHeAVIBYwH/AZwBawH/AZwBWgH3
        AYwBAAFrCgABxgGEAVoBzgGUAWMB9wHnAb0B/wHWAaUBtQGcAaUCEAGcAaUBlAG1AfcB7wHGAf8B9wHW
        Ac4BlAFjAaUBQgEIAaUBQgEQAc4BnAGEAwABGAExAa0BcwHWAf8BGAFSAf8BAAExAf8BCAEYAa0CpQHG
        BgACpQG9AQgBGAGUASEBSgHnAQgBKQHOAlIBlBMAAXMBAAEUAdYBeAEUAdYBeAEXAasBJgEQAacBGAEA
        AXMcAAG9AVoBIQH/AfcBzgH/Ad4BtQEAAZwBAAFaAfcBjAFSAe8BewFKAecBcwFCAd4BYwE5AdYBWgEx
        Ac4BSgEpAb0BQgEYAa0BIQEAAWMHAAHnAdYBxgG1AVoBGAH3Ae8BzgH/AdYBrQH/AdYBpQHGAq0CAAGc
        ATkBawHGAUIBSgGtAd4B1gHOAf8B7wHOAf8B9wHWAbUBYwEpAZwBOQcAASkBSgG9AYQB3gH/ASEBWgH/
        AQgBOQH/AQgBEAGlAq0BzgE5AUIBlAEAARgBvQEpAWsB/wEhAVIB7wIxAYwTAAFzAQABFAHWAXgBFAHW
        AXgBJgG/AToBHQG2ASwBHQG2ASwBHQG2ASwBAAFzFgABzgGMAVIB3gGtAXMB9wHnAb0B/wHeAaUBewG1
        AUoBAAGcAgABnAEAARABrQEQAUoB5wFzAWsB/wGcAQABjAIAAYQCAAF7AQABYwFzASEGAAHGAYQBUgHe
        Aa0BcwH3AecBvQH/AdYBpQH/Ad4BrQHWAb0BrQFrAbUB5wFzAdYB/wExAYwB9wIpAYwB3gHWAcYC/wLe
        Ab0BlAG9AXMBSgkAATEBWgHGAYQB5wH/ASkBawH/ARABQgH/AQgBGAGtAQgBMQHvATkBhAH/ATkBcwH3
        ARgBIQGMEgABFwGrASYBNAHNAU8BKQHUAW4BMAHGAUoBAAGXAgABlwEAARQB1gF4AR4BzAFdASYBvwE6
        AQABcxMAAc4BcwExAf8B9wHeAf8B3gGtAf8B1gGtAv8B1gH/AecBvQHvAb0BYwEQAa0BGAFSAe8BewFr
        Af8BpQEAAZQBAAH/AfcB3gG9AWsBMQYAAecBzgG1AcYBcwEpAf8B9wHWAf8B3gGtAf8B1gGlAf8B9wHW
        Ad4BzgG9AXsBzgHvAVoBrQHnAVoBQgFaAWMCMQF7AVoBawH/AfcB1gG1AWMBMQ8AATkBYwHGAYwB7wH/
        ATkBewH/ASEBUgH/AUIBhAH/AVIBnAH/ARABIQGcGAABFwGrASYBQwHaAWYBAAGXBwABEAGnARgBEAHu
        AZoBFAHWAXgBLAHCAUIBAAFzDQAB1gGMAUoB5wG9AYwB/wHnAbUB/wHeAaUB9wG1AVIB5wGlAUIB/wHn
        AaUC/wHeARABrQEQAUoB5wFzAWsB/wGcAQABnAEAAdYBlAFaAd4BtQGcBgABzgGMAUoB5wG9AYQB9wHe
        AbUB/wHWAaUB7wGtAVIB5wGlATkB1gHGAaUBYwFrAYQBcwFCATkBcwFCATkBawIxAWsCMQG9AYQBWgHW
        AbUBnAwAAoQBxgEQASkBxgFKAYwB/wGMAfcB/wFSAZQB/wFCAYwB/wEQASEBrR4AARcBqwEmDAABCQG4
        ATkBFgHzAaIBIwHmAYMBNAHNAU8BAAFzCgABzgGEAUIC/wHWAf8B3gGtAf8B3gGtAf8B3gG1Af8B3gGt
        Ae8BtQFjAecBpQE5AXsBvQFSAQABnAIAAZwBCAF7AbUBUgHGAYQBUgYAAecBzgG1Ac4BhAE5Af8B9wHW
        Af8B1gGlAf8B1gGlAf8B3gGtAf8B3gGtAecBrQJaATEBQgGcAXMBWgG9AZQBawF7AVIBQgFjAjEBhAFK
        ATkMAAExATkBvQExAVoB7wFKAYQB/wFCAXsB/wFjAaUB/wGUAfcB/wFrAb0B/wEpAVIB7wE5AUIBnC0A
        ARcBxgFVARYB8wGiASMB5gGDAT0B0wFdAQABcwQAAdYBlAFSAfcB1gGcAf8B5wG9Af8B3gGlAf8B3gG1
        Af8B5wG1Af8B7wG9Af8B7wHGAf8B7wHGAfcBzgFzAf8B7wHGAf8B9wHWAcYBcwE5CQAB1gGMAUoB7wHO
        AZwB/wHeAbUB/wHWAaUB/wHeAa0B/wHeAbUB/wHnAb0B/wHvAcYB5wHOAaUBhAFSAUIB7wG9AYwBpQF7
        AVoBcwFCATkBYwIxBgABcwF7AdYBKQFKAdYBWgGUAf8BYwGcAf8BWgGUAf8BewHOAf8BjAHnAf8BOQFj
        Ad4BewHOAf8BhAHeAf8BOQFrAe8BQgFKAaUtAAEeAcwBXQEWAfMBogFAAeMBeQEBAWcBAQMAAdYBhAEx
        AfcB1gGtAf8B3gGlAf8B3gGtAf8B5wG1Af8B5wG9Af8B7wHGAecBtQGMAdYBpQFzAf8B7wHOAv8B3gHW
        AZQBYwHeAb0BpQkAAc4BhAExAfcB1gGlAf8B1gGlAf8B1gGlAf8B3gGtAf8B5wG1Af8B5wG9Ad4BtQGE
        AdYBnAFzAaUBewFrAc4BnAFzAdYBrQGEAZQBawFSAWsCMQGEAlIDAAE5AUoBxgFaAZQB/wFzAa0B/wFz
        Aa0B/wGUAe8B/wGMAd4B/wFCAXMB7wJrAcYCjAHGAVIBjAHeAZQB9wH/AVIBlAH3AUoBUgGlLQABKQHU
        AW4BCQFxAQ0GAAHeAaUBYwHeAYwBOQHnAaUBYwH/AdYBlAH/AecBtQH/Ae8BvQH/Ae8CxgFrASkBvQFj
        ARgB1gF7ASEB3gGUAUoB1gGUAVIMAAHeAZwBYwHWAYQBMQHnAaUBWgH3Ac4BlAH/Ad4BtQH/AecBvQH/
        AecCvQFjASEBvQFjARABxgFrASEBewFCATkB7wG9AYwBvQGcAWsBewFSAUIBYwIxBgABOQFKAcYBawGl
        Af8BnAH3Af8BhAHWAf8BWgGMAfcBQgFSAb0JAAFCAVoBvQFzAcYB9wF7AdYB/wFSAWsBtTwAAecBxgGU
        Ad4BlAFSAd4BlAFKAe8BvQGEAecBrQFzAdYBewEhAd4BjAEpAecBlAExAecBpQFSFQAB5wG9AZQB1gGU
        AUoB1gGUAUIB7wG9AXsB5wGtAWsBzgF7ASEB3gGEASkB3gGMASkBpQFrAUIBtQGMAWsB5wG9AYwBpQGM
        AWMBawI5AXMCQgYAAUIBYwHOAXsBtQH/AXMBrQH/ATkBQgHODwACjAHOATEBUgG9AWMBrQHvAUIBUgGt
        PwAB7wHeAc4B5wG1AXsB3gGMATkB7wGlAVIB5wHOAaUhAAHvAdYBxgHeAa0BewHeAYwBMQHnAaUBUgHn
        AcYBpQYAAXsCUgHvAb0BjAHGAa0BcwGEAWMBSgF7AkoJAAE5AUoBxgExAUIBzhgAApQBxgExATkBrQK9
        Ac6EAAF7AUoBQgGEAWMBSgF7AkpjAAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/
        AQAE/wQABP8EAAT/BAAB+AEfAv8EAAHwAQ8C/wQAAeABBwH8AR8EAAHiAUcB/AEfBAAB4QGHAfwBHwQA
        AeEBhwH8AR8EAAHiAUcB/AEfBAAB4AEHAv8EAAHwAQ8C/wQAAfgBHwL/BAAE/wQABP8EAAT/BAAB+AGH
        AfgF/wH4AQcB8AE/Ac8B/AL/AfABBwHwAQ8BBwHwAfwB/wHwAQAB4AIDAeEB+AF/AeABAAHgAQABgQGD
        AfABPwHgAQABwAEAAcABBwHgAR8BwAEAAcABAAHgAQ8BwAEPAcABAQGAAQEB8AEfAeMBBwGAAQEBgAEB
        AeABPwH3AYMBgAEDAQABAwHAAR8B/wHBAQABBwEAAQMBAAEPAf8B4QEAAQcBAAEBAQABBwH/AfMBAAEP
        AQABAQGBAcMC/wHAAR8BwAEAAcMB4QL/AfABfwHwAWAB5wH4Bf8B8QT/Cw==
</value>
  </data>
</root>