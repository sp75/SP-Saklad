<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="GridImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="GridImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB0
        EAAAAk1TRnQBSQFMAgEBBgEAAeABCAHgAQgBEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGBIAMO+QADDvkAAw75AAD+8CawHGAgABnAIAAZwCAAGcAgABnAJrAcYP75AA
        DO8CawHGAgABnAEAAQgBrQEAARgBxgEAARgBxgEAAQgBrQIAAZwCawHGDO+QAAnvAmsBxgEAAQgBrQHW
        Ad4B/wHWAd4B/wEQAUIB/wEQAUIB/wHWAd4B/wHWAd4B/wIAAZwCawHGCe8SAA+AbwAJ7wEAARgBxgEA
        ARgBxgHWAd4B/wMAAdYB3gH/AdYB3gH/AwAB1gHeAf8BAAEYAcYBAAEYAcYJ7xIAD4BvAAnvAQABGAHG
        AQABIQHnARABQgH/AdYB3gH/BgAB1gHeAf8BEAFCAf8BAAEhAecBAAEYAcYJ7xIAD4BvAAnvAQABIQHn
        AQABIQHnARABQgH/AdYB3gH/BgAB1gHeAf8BEAFCAf8BAAEhAecBAAEhAecJ7xIAD4BvAAnvAQABIQHn
        AQABIQHnAdYB3gH/AwAB1gHeAf8B1gHeAf8DAAHWAd4B/wEAASEB5wEAASEB5wnvEgAPgG8ACe8BcwGM
        Ae8BAAEhAecB1gHeAf8B1gHeAf8BEAFCAf8BEAFCAf8B1gHeAf8B1gHeAf8BAAEhAecBYwFzAdYJ75AA
        DO8CawHGAQABMQH/AQABMQH/AQABMQH/AQABMQH/AQABMQH/AQABMQH/AmsBxgzvkAAP7wFzAYwB7wEA
        ATEB/wEAATEB/wEAATEB/wEAATEB/wFzAYwQ75AAMO+QADDvkAAw758AAdYBnAF7Aa0BUgEpAdYBtQGU
        AwABhAG1AXsBAAFrAQABEAF7ARABnAHGAZwYAAHOAZwBewGtAVIBIQHWAa0BlEgAMO8PAAGlAUIBEAHG
        AXsBSgGlAUIBEAGtAVIBIQEIAXsBEAEhAb0BKQFjAf8BnAEAAWsWAAHvAd4B1gGlAUIBCAG9AXsBSgGl
        AUIBCAGtAVIBIQHOAaUBlBgAAjkBnAIYAZQeAAJaAZwCEAF7MO8MAAHGAYwBYwHGAYQBSgL/Ad4C/wHW
        Ac4BnAFzAQgBjAEIASEBxgE5AWsB/wGcAQABaxYAAcYBhAFjAcYBewFKAf8B9wHWAf8B9wHWAc4BlAFr
        AaUBQgEIAaUBSgEYAc4BpQGMDAACnAHOAQgBGAGlAQABKQHvAQgBKQHeATEBOQGcFQABrQG1Ac4BEAEY
        AZQBAAEIAaUCnAG1Eu8BAAFzAgABcwEAGO8MAAG1AVIBGAH3AecBxgGEAb0BUgEQAaUBGAEQAZwCEAGc
        ASEBMQHOAUoBYwH/AZwBCAF7AggBcwIIAXMBAAGEAbUBhAkAAecB1gHOAa0BUgEQAfcB5wG9Af8B1gGt
        Ad4BvQGtAecB1gG9Af8B9wHWAc4BlAFjAaUBQgEIAaUBSgEYAc4BpQGMBgACIQGlAVIBnAH/ARgBWgH/
        AQABMQH/AQgBIQHGAmsBrQ8AAkoBnAEAARABrQEAARABvQFzAXsBrQMAD+8BAAFzAQABFwHGAVUBCQG4
        ATkBAAFzAQAV7wkAAc4BjAFaAc4BnAFjAf8B7wHGARABrQEhAWsB/wGcAWMB/wGcAWMB/wGUATkB1gFa
        ATkB3gFSAWMB/wGcAWsB/wGcAVoB9wGMAQABawoAAcYBhAFaAc4BlAFjAfcB5wG9Af8B1gGlAbUBnAGl
        AhABnAGlAZQBtQH3Ae8BxgH/AfcB1gHOAZQBYwGlAUIBCAGlAUIBEAHOAZwBhAMAARgBMQGtAXMB1gH/
        ARgBUgH/AQABMQH/AQgBGAGtAqUBxgYAAqUBvQEIARgBlAEhAUoB5wEIASkBzgJSAZQGAAzvAQABcwEA
        ARQB1gF4ARQB1gF4ARcBqwEmARABpwEYAQABcwEAEu8JAAG9AVoBIQH/AfcBzgH/Ad4BtQEAAZwBAAFa
        AfcBjAFSAe8BewFKAecBcwFCAd4BYwE5AdYBWgExAc4BSgEpAb0BQgEYAa0BIQEAAWMHAAHnAdYBxgG1
        AVoBGAH3Ae8BzgH/AdYBrQH/AdYBpQHGAq0CAAGcATkBawHGAUIBSgGtAd4B1gHOAf8B7wHOAf8B9wHW
        AbUBYwEpAZwBOQcAASkBSgG9AYQB3gH/ASEBWgH/AQgBOQH/AQgBEAGlAq0BzgE5AUIBlAEAARgBvQEp
        AWsB/wEhAVIB7wIxAYwJAAnvAQABcwEAARQB1gF4ARQB1gF4ASYBvwE6AR0BtgEsAR0BtgEsAR0BtgEs
        AQABcwEAD+8GAAHOAYwBUgHeAa0BcwH3AecBvQH/Ad4BpQF7AbUBSgEAAZwCAAGcAQABEAGtARABSgHn
        AXMBawH/AZwBAAGMAgABhAIAAXsBAAFjAXMBIQYAAcYBhAFSAd4BrQFzAfcB5wG9Af8B1gGlAf8B3gGt
        AdYBvQGtAWsBtQHnAXMB1gH/ATEBjAH3AikBjAHeAdYBxgL/At4BvQGUAb0BcwFKCQABMQFaAcYBhAHn
        Af8BKQFrAf8BEAFCAf8BCAEYAa0BCAExAe8BOQGEAf8BOQFzAfcBGAEhAYwMAAbvARcBqwEmATQBzQFP
        ASkB1AFuATABxgFKAQABlwIAAZcBAAEUAdYBeAEeAcwBXQEmAb8BOgEAAXMBAAzvBgABzgFzATEB/wH3
        Ad4B/wHeAa0B/wHWAa0C/wHWAf8B5wG9Ae8BvQFjARABrQEYAVIB7wF7AWsB/wGlAQABlAEAAf8B9wHe
        Ab0BawExBgAB5wHOAbUBxgFzASkB/wH3AdYB/wHeAa0B/wHWAaUB/wH3AdYB3gHOAb0BewHOAe8BWgGt
        AecBWgFCAVoBYwIxAXsBWgFrAf8B9wHWAbUBYwExDwABOQFjAcYBjAHvAf8BOQF7Af8BIQFSAf8BQgGE
        Af8BUgGcAf8BEAEhAZwPAAnvARcBqwEmAUMB2gFmAQABlwEABu8BEAGnARgBEAHuAZoBFAHWAXgBLAHC
        AUIBAAFzAQAJ7wMAAdYBjAFKAecBvQGMAf8B5wG1Af8B3gGlAfcBtQFSAecBpQFCAf8B5wGlAv8B3gEQ
        Aa0BEAFKAecBcwFrAf8BnAEAAZwBAAHWAZQBWgHeAbUBnAYAAc4BjAFKAecBvQGEAfcB3gG1Af8B1gGl
        Ae8BrQFSAecBpQE5AdYBxgGlAWMBawGEAXMBQgE5AXMBQgE5AWsCMQFrAjEBvQGEAVoB1gG1AZwMAAKE
        AcYBEAEpAcYBSgGMAf8BjAH3Af8BUgGUAf8BQgGMAf8BEAEhAa0SAAzvARcBqwEmDO8BCQG4ATkBFgHz
        AaIBIwHmAYMBNAHNAU8BAAFzAQAG7wMAAc4BhAFCAv8B1gH/Ad4BrQH/Ad4BrQH/Ad4BtQH/Ad4BrQHv
        AbUBYwHnAaUBOQF7Ab0BUgEAAZwCAAGcAQgBewG1AVIBxgGEAVIGAAHnAc4BtQHOAYQBOQH/AfcB1gH/
        AdYBpQH/AdYBpQH/Ad4BrQH/Ad4BrQHnAa0CWgExAUIBnAFzAVoBvQGUAWsBewFSAUIBYwIxAYQBSgE5
        DAABMQE5Ab0BMQFaAe8BSgGEAf8BQgF7Af8BYwGlAf8BlAH3Af8BawG9Af8BKQFSAe8BOQFCAZwPAB7v
        ARcBxgFVARYB8wGiASMB5gGDAT0B0wFdAQABcwEAA+8B1gGUAVIB9wHWAZwB/wHnAb0B/wHeAaUB/wHe
        AbUB/wHnAbUB/wHvAb0B/wHvAcYB/wHvAcYB9wHOAXMB/wHvAcYB/wH3AdYBxgFzATkJAAHWAYwBSgHv
        Ac4BnAH/Ad4BtQH/AdYBpQH/Ad4BrQH/Ad4BtQH/AecBvQH/Ae8BxgHnAc4BpQGEAVIBQgHvAb0BjAGl
        AXsBWgFzAUIBOQFjAjEGAAFzAXsB1gEpAUoB1gFaAZQB/wFjAZwB/wFaAZQB/wF7Ac4B/wGMAecB/wE5
        AWMB3gF7Ac4B/wGEAd4B/wE5AWsB7wFCAUoBpQwAIe8BHgHMAV0BFgHzAaIBQAHjAXkBAQFnAQED7wHW
        AYQBMQH3AdYBrQH/Ad4BpQH/Ad4BrQH/AecBtQH/AecBvQH/Ae8BxgHnAbUBjAHWAaUBcwH/Ae8BzgL/
        Ad4B1gGUAWMB3gG9AaUJAAHOAYQBMQH3AdYBpQH/AdYBpQH/AdYBpQH/Ad4BrQH/AecBtQH/AecBvQHe
        AbUBhAHWAZwBcwGlAXsBawHOAZwBcwHWAa0BhAGUAWsBUgFrAjEBhAJSAwABOQFKAcYBWgGUAf8BcwGt
        Af8BcwGtAf8BlAHvAf8BjAHeAf8BQgFzAe8CawHGAowBxgFSAYwB3gGUAfcB/wFSAZQB9wFKAVIBpQkA
        JO8BKQHUAW4BCQFxAQ0G7wHeAaUBYwHeAYwBOQHnAaUBYwH/AdYBlAH/AecBtQH/Ae8BvQH/Ae8CxgFr
        ASkBvQFjARgB1gF7ASEB3gGUAUoB1gGUAVIMAAHeAZwBYwHWAYQBMQHnAaUBWgH3Ac4BlAH/Ad4BtQH/
        AecBvQH/AecCvQFjASEBvQFjARABxgFrASEBewFCATkB7wG9AYwBvQGcAWsBewFSAUIBYwIxBgABOQFK
        AcYBawGlAf8BnAH3Af8BhAHWAf8BWgGMAfcBQgFSAb0JAAFCAVoBvQFzAcYB9wF7AdYB/wFSAWsBtQYA
        MO8GAAHnAcYBlAHeAZQBUgHeAZQBSgHvAb0BhAHnAa0BcwHWAXsBIQHeAYwBKQHnAZQBMQHnAaUBUhUA
        AecBvQGUAdYBlAFKAdYBlAFCAe8BvQF7AecBrQFrAc4BewEhAd4BhAEpAd4BjAEpAaUBawFCAbUBjAFr
        AecBvQGMAaUBjAFjAWsCOQFzAkIGAAFCAWMBzgF7AbUB/wFzAa0B/wE5AUIBzg8AAowBzgExAVIBvQFj
        Aa0B7wFCAVIBrQMAMO8MAAHvAd4BzgHnAbUBewHeAYwBOQHvAaUBUgHnAc4BpSEAAe8B1gHGAd4BrQF7
        Ad4BjAExAecBpQFSAecBxgGlBgABewJSAe8BvQGMAcYBrQFzAYQBYwFKAXsCSgkAATkBSgHGATEBQgHO
        GAAClAHGATEBOQGtAr0BzjDvVAABewFKAUIBhAFjAUoBewJKMwAw7wFCAU0BPgcAAT4DAAEoAwABQAMA
        ASADAAEBAQABAQYAAQEWAAP/AwAC/wYAAv8GAAL/BgAC/wYAAv8GAAH8AR8EAAECAUAB/AEfBAABAQGA
        AfwBHwQAAQEBgAH8AR8EAAECAUAB/AEfBgAC/wYAAv8GAAL/BgAC/wYAAv8GAAL/BAAB+AGHAfgD/wIA
        AfgBBwHwAT8BzwH8AgAB8AEHAfABDwEHAfACAAHwAQAB4AIDAeECAAHgAQAB4AEAAYEBgwIAAeABAAHA
        AQABwAEHAgABwAEAAcABAAHgAQ8CAAHAAQEBgAEBAfABHwIAAYABAQGAAQEB4AE/AgABgAEDAQABAwHA
        AR8DAAEHAQABAwEAAQ8DAAEHAQABAQEAAQcDAAEPAQABAQGBAcMCAAHAAR8BwAEAAcMB4QIAAfABfwHw
        AWAB5wH4AgAD/wHxAv8CAAs=
</value>
  </data>
</root>